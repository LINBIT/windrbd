From 1e87b36a9cd8e6c9b1c58821393ce7d3e26552ac Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Tue, 16 Oct 2018 17:28:11 +0200
Subject: [PATCH 2/4] Commented out module parameter code, added type to list
 iterator.

---
 drbd/drbd_main.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drbd/drbd_main.c b/drbd/drbd_main.c
index e1fd8c1..022d036 100644
--- a/drbd/drbd_main.c
+++ b/drbd/drbd_main.c
@@ -117,6 +117,7 @@ char drbd_usermode_helper[80] = "/cygdrive/c/windrbd/usr/sbin/drbdadm";
 module_param_named(minor_count, drbd_minor_count, uint, 0444);
 module_param_string(usermode_helper, drbd_usermode_helper, sizeof(drbd_usermode_helper), 0644);
 
+#if 0
 static int param_set_drbd_protocol_version(const char *s, const struct kernel_param *kp)
 {
 	unsigned long long tmp;
@@ -142,6 +143,8 @@ const struct kernel_param_ops param_ops_drbd_protocol_version = {
 };
 #endif
 
+#endif
+
 unsigned int drbd_protocol_version_min = PRO_VERSION_MIN;
 module_param_named(protocol_version_min, drbd_protocol_version_min, drbd_protocol_version, 0644);
 
@@ -2592,7 +2595,7 @@ static void __prune_or_free_openers(struct drbd_device *device, pid_t pid)
 {
 	struct opener *pos, *tmp;
 
-	list_for_each_entry_safe(pos, tmp, &device->openers.list, list) {
+	list_for_each_entry_safe(struct opener, pos, tmp, &device->openers.list, list) {
 		// if pid == 0, i.e., counts were 0, delete all entries, else the matching one
 		if (pid == 0 || pid == pos->pid) {
 			dynamic_drbd_dbg(device, "%sopeners del: %s(%d)\n", pid == 0 ? "" : "all ",
@@ -2618,7 +2621,7 @@ static void add_opener(struct drbd_device *device)
 	struct opener *opener;
 	int len = 0;
 
-	list_for_each_entry(opener, &device->openers.list, list)
+	list_for_each_entry(struct opener, opener, &device->openers.list, list)
 		if (++len > 100) { /* 100 ought to be enough for everybody */
 			dynamic_drbd_dbg(device, "openers: list full, do not add new opener\n");
 			return;
-- 
2.17.0

