diff --git i/drbd/drbd_req.c w/drbd/drbd_req.c
index e1e9595b..100a6e49 100644
--- i/drbd/drbd_req.c
+++ w/drbd/drbd_req.c
@@ -29,6 +29,8 @@
 #include <linux/drbd.h>
 #include "drbd_int.h"
 #include "drbd_req.h"
+#include "linux/jiffies.h"
+
 
 
 
@@ -177,7 +177,7 @@ void drbd_req_destroy(struct kref *kref)
 {
 	struct drbd_request *req = container_of(kref, struct drbd_request, kref);
 	struct drbd_request *destroy_next;
-	struct drbd_device *device;
+	struct drbd_device *device = NULL;
 	struct drbd_peer_device *peer_device;
 	unsigned int s, device_refs = 0;
 	bool was_last_ref = false;
@@ -743,8 +737,6 @@ static void mod_rq_state(struct drbd_request *req, struct bio_and_error *m,
 
 static void drbd_report_io_error(struct drbd_device *device, struct drbd_request *req)
 {
-        char b[BDEVNAME_SIZE];
-
 	if (!drbd_ratelimit())
 		return;
 
@@ -1155,8 +1147,12 @@ static bool remote_due_to_read_balancing(struct drbd_device *device,
 
 	switch (rbm) {
 	case RB_CONGESTED_REMOTE:
+		return false;
+#if 0
+		// TODO reimplement statistics
		bdi = bdi_from_device(device);
 		return bdi_read_congested(bdi);
+#endif
 	case RB_LEAST_PENDING:
 		return atomic_read(&device->local_cnt) >
 			atomic_read(&peer_device->ap_pending_cnt) + atomic_read(&peer_device->rs_pending_cnt);
@@ -1211,7 +1207,8 @@ static void complete_conflicting_writes(struct drbd_request *req)
 		prepare_to_wait(&device->misc_wait, &wait, TASK_UNINTERRUPTIBLE);
 		i->waiting = true;
 		spin_unlock_irq(&device->resource->req_lock);
-		schedule();
+		schedule(&device->misc_wait, MAX_SCHEDULE_TIMEOUT, __FUNCTION__, __LINE__);
+
 		spin_lock_irq(&device->resource->req_lock);
 	}
 	finish_wait(&device->misc_wait, &wait);
@@ -1736,9 +1681,15 @@ static void drbd_send_and_submit(struct drbd_device *device, struct drbd_request
 		submit_private_bio = true;
 	} else if (no_remote) {
 nodata:
-		if (drbd_ratelimit())
-			drbd_err(req->device, "IO ERROR: neither local nor remote data, sector %llu+%u\n",
+		if (drbd_ratelimit()) {
+#pragma warning( push )
+#pragma warning (disable : 4457)
+			/* warning C4457: declaration of 'device' hides function parameter */
+			struct drbd_device *device = req->device;
+			drbd_err(device, "IO ERROR: neither local nor remote data, sector %llu+%u\n",
 					(unsigned long long)req->i.sector, req->i.size >> 9);
+#pragma warning( pop )
+		}
 		/* A write may have been queued for send_oos, however.
 		 * So we can not simply free it, we must go through drbd_req_put_completion_ref() */
 	}
