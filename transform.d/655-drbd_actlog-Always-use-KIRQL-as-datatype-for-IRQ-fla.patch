From 1455c892370faca223ca1a2c9b209c5a8a0191c0 Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Fri, 8 May 2020 16:36:54 +0200
Subject: [PATCH 01/12] drbd_actlog: Always use KIRQL as datatype for IRQ
 flags.

---
 drbd/drbd_actlog.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drbd/drbd_actlog.c b/drbd/drbd_actlog.c
index b8bbf71..636468e 100644
--- a/drbd/drbd_actlog.c
+++ b/drbd/drbd_actlog.c
@@ -268,7 +268,7 @@ static bool
 drbd_dax_begin_io_fp(struct drbd_device *device, unsigned int first, unsigned int last)
 {
 	struct lc_element *al_ext;
-	ULONG_PTR flags;
+	KIRQL flags;
 	unsigned int enr;
 	unsigned int abort_enr;
 	bool wake = 0;
@@ -564,7 +564,7 @@ void drbd_al_begin_io_commit(struct drbd_device *device)
 static bool put_actlog(struct drbd_device *device, unsigned int first, unsigned int last)
 {
 	struct lc_element *extent;
-	ULONG_PTR flags;
+	KIRQL flags;
 	unsigned int enr;
 	bool wake = false;
 
@@ -1069,7 +1069,7 @@ static int update_sync_bits(struct drbd_peer_device *peer_device,
 	 * alignment. Typically this loop will execute exactly once.
 	 */
 	struct drbd_device *device = peer_device->device;
-	ULONG_PTR flags;
+	KIRQL flags;
 	ULONG_PTR count = 0;
 	unsigned int cleared = 0;
 	while (sbnr <= ebnr) {
@@ -1531,7 +1531,7 @@ void drbd_rs_complete_io(struct drbd_peer_device *peer_device, sector_t sector)
 	unsigned int enr = BM_SECT_TO_EXT(sector);
 	struct lc_element *e;
 	struct bm_extent *bm_ext;
-	ULONG_PTR flags;
+	KIRQL flags;
 
 	spin_lock_irqsave(&device->al_lock, flags);
 	e = lc_find(peer_device->resync_lru, enr);
-- 
2.17.0

