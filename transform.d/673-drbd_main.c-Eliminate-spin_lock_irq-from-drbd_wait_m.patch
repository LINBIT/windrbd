From df9d181f291900e201f90792298fd43c580be3f1 Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Fri, 30 Oct 2020 13:29:08 +0100
Subject: [PATCH 1/6] drbd_main.c: Eliminate spin_lock_irq from
 drbd_wait_misc().

We should only use the spin_lock_irqsave/spin_unlock_irqrestore
macros.
---
 drbd/drbd_main.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drbd/drbd_main.c b/drbd/drbd_main.c
index 0cbf9e2..b866471 100644
--- a/drbd/drbd_main.c
+++ b/drbd/drbd_main.c
@@ -5721,7 +5721,7 @@ static void md_sync_timer_fn(struct timer_list *t)
  * @i:		the struct drbd_interval embedded in struct drbd_request or
  *		struct drbd_peer_request
  */
-int drbd_wait_misc(struct drbd_device *device, struct drbd_peer_device *peer_device, struct drbd_interval *i)
+int drbd_wait_misc(struct drbd_device *device, struct drbd_peer_device *peer_device, struct drbd_interval *i, KIRQL *spin_lock_irq_flags_p)
 {
 	KIRQL rcu_flags;
 	DEFINE_WAIT(wait);
@@ -5745,10 +5745,10 @@ int drbd_wait_misc(struct drbd_device *device, struct drbd_peer_device *peer_dev
 	/* Indicate to wake up device->misc_wait on progress.  */
 	i->waiting = true;
 	prepare_to_wait(&device->misc_wait, &wait, TASK_INTERRUPTIBLE);
-	spin_unlock_irq(&device->resource->req_lock);
+	spin_unlock_irqrestore(&device->resource->req_lock, *spin_lock_irq_flags_p);
 	timeout = schedule_timeout(timeout);
 	finish_wait(&device->misc_wait, &wait);
-	spin_lock_irq(&device->resource->req_lock);
+	spin_lock_irqsave(&device->resource->req_lock, *spin_lock_irq_flags_p);
 	if (!timeout || (peer_device && peer_device->repl_state[NOW] < L_ESTABLISHED))
 		return -ETIMEDOUT;
 	if (signal_pending(current))
-- 
2.17.0

