From e7ef9b116686f9a17fb53ac980df78a094a9a1d7 Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Tue, 26 Feb 2019 17:32:11 +0100
Subject: [PATCH 2/4] drbd_main: lock/unlock_all_resources: Store current IRQL
 in flags

We changed the interface to local_irq_disable, which in turn
needs some patches in DRBD files.
---
 drbd/drbd_main.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drbd/drbd_main.c b/drbd/drbd_main.c
index 1ff3775..b5d6972 100644
--- a/drbd/drbd_main.c
+++ b/drbd/drbd_main.c
@@ -5409,19 +5409,19 @@ int drbd_wait_misc(struct drbd_device *device, struct drbd_peer_device *peer_dev
 #ifndef __maybe_unused
 #define __maybe_unused                  __attribute__((unused))
 #endif
-void lock_all_resources(void)
+void lock_all_resources(KIRQL *flags_p)
 {
 	struct drbd_resource *resource;
 	int __maybe_unused i = 0;
 	KIRQL unused_flags;
 
 	mutex_lock(&resources_mutex);
-	local_irq_disable();
+	local_irq_disable(flags_p);
 	for_each_resource(resource, &drbd_resources)
 		spin_lock_irqsave(&resource->req_lock, unused_flags);
 }
 
-void unlock_all_resources(void)
+void unlock_all_resources(KIRQL flags)
 {
 	struct drbd_resource *resource;
 		/* Since local_irq_enable raises IRQL to DISPATCH_LEVEL (2)
@@ -5429,7 +5429,7 @@ void unlock_all_resources(void)
 		 */
 	for_each_resource(resource, &drbd_resources)
 		spin_unlock_irqrestore(&resource->req_lock, DISPATCH_LEVEL);
-	local_irq_enable();
+	local_irq_enable(flags);
 	mutex_unlock(&resources_mutex);
 }
 
-- 
2.17.0

