From 7dcf85964efca94151b30b17d1a0ef0c4b37d5b5 Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Tue, 26 Feb 2019 17:32:44 +0100
Subject: [PATCH 3/4] drbd_nl: lock/unlock_all_resources: Store current IRQL in
 flags.

We changed the interface to local_irq_disable, which in turn
needs some patches in DRBD files.
---
 drbd/drbd_nl.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/drbd/drbd_nl.c b/drbd/drbd_nl.c
index 061128b..c7a9b75 100644
--- a/drbd/drbd_nl.c
+++ b/drbd/drbd_nl.c
@@ -2317,6 +2317,7 @@ int drbd_adm_disk_opts(struct sk_buff *skb, struct genl_info *info)
 	struct disk_conf *new_disk_conf, *old_disk_conf;
 	struct drbd_peer_device *peer_device;
 	int err;
+	KIRQL flags;
 
 	retcode = drbd_adm_prepare(&adm_ctx, skb, info, DRBD_ADM_NEED_MINOR);
 	if (!adm_ctx.reply_skb)
@@ -2364,13 +2365,13 @@ int drbd_adm_disk_opts(struct sk_buff *skb, struct genl_info *info)
 		goto fail_unlock;
 	}
 
-	lock_all_resources();
+	lock_all_resources(&flags);
 	retcode = drbd_resync_after_valid(device, new_disk_conf->resync_after);
 	if (retcode == NO_ERROR) {
 		rcu_assign_pointer(device->ldev->disk_conf, new_disk_conf);
 		drbd_resync_after_changed(device);
 	}
-	unlock_all_resources();
+	unlock_all_resources(flags);
 
 	if (retcode != NO_ERROR)
 		goto fail_unlock;
@@ -2689,6 +2690,7 @@ int drbd_adm_attach(struct sk_buff *skb, struct genl_info *info)
 	struct drbd_peer_device *peer_device;
 	unsigned int slots_needed = 0;
 	bool have_conf_update = false;
+	KIRQL flags;
 
 	retcode = drbd_adm_prepare(&adm_ctx, skb, info, DRBD_ADM_NEED_MINOR);
 	if (!adm_ctx.reply_skb)
@@ -2725,9 +2727,9 @@ int drbd_adm_attach(struct sk_buff *skb, struct genl_info *info)
 		goto fail;
 	}
 
-	lock_all_resources();
+	lock_all_resources(&flags);
 	retcode = drbd_resync_after_valid(device, new_disk_conf->resync_after);
-	unlock_all_resources();
+	unlock_all_resources(flags);
 	if (retcode != NO_ERROR)
 		goto fail;
 
@@ -2959,10 +2961,10 @@ int drbd_adm_attach(struct sk_buff *skb, struct genl_info *info)
 	mutex_unlock(&resource->conf_update);
 	have_conf_update = false;
 
-	lock_all_resources();
+	lock_all_resources(&flags);
 	retcode = drbd_resync_after_valid(device, device->ldev->disk_conf->resync_after);
 	if (retcode != NO_ERROR) {
-		unlock_all_resources();
+		unlock_all_resources(flags);
 		goto force_diskless_dec;
 	}
 
@@ -2975,7 +2977,7 @@ int drbd_adm_attach(struct sk_buff *skb, struct genl_info *info)
 
 	drbd_resync_after_changed(device);
 	drbd_bump_write_ordering(resource, device->ldev, WO_BIO_BARRIER);
-	unlock_all_resources();
+	unlock_all_resources(flags);
 
 	/* Prevent shrinking of consistent devices ! */
 	{
-- 
2.17.0

