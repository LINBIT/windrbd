compat: ! compat
! compat (bpput, ...)
! compat layer: implement ioctl for setting that
! compat make this work (kmem_cache_size and the like)
! compat,manual: here we allocate big pages, have a seperate function for that (so we don't need to patch drbd_sender and drbd_reveicer)
! compat: /cygdrive/c/windrbd should not be hardcoded .. have ioctl to set this
! compat: Also this bio_for_each_segment macro needs to be changed
! compat: I think this is needed but can be handled in the compat layer
! compat: also fix seq_printf.c
! compat: also make IPV6_ADDR_LINKLOCAL work
! compat: bio_vec
! compat: bio_vec patch
! compat: bio_vec patch (and sizeof (void*) again)
! compat: biosets
! compat: call it via the module struct (module_exit()), then remove
! compat: call this when drbd_create_device returned with NO_ERROR
! compat: call via drbd_open(bdev, FMODE_WRITE)?
! compat: call via drbd_ops
! compat: call via module_init()
! compat: define these fields, fill out with data from receiver thread.
! compat: define this and initialize later (how?)
! compat: fix DEFINE_SPINLOCK - or maybe manual - or compat (do this once drbd_init returns)
! compat: for big pages have seperate fn (then remove)
! compat: have a dummy flag? What is NOSPACE supposed to do (something with memory management?)
! compat: implement /proc
! compat: implement __get_free_pages (by calling kmalloc)
! compat: implement bdi_congested
! compat: implement bdi_read_congested()
! compat: implement blk_queue_max_discard_sectors (possibly doing nothing)
! compat: implement copy_highpage
! compat: implement debug fs (via ioctl)
! compat: implement debugfs
! compat: implement debugfs (via ioctl)
! compat: implement free_pages
! compat: implement fsync_bdev somehow (ideally in 1.1 branch)
! compat: implement i_size_read, remove windrbd_get_capacity
! compat: implement ioctl for accessing /proc/drbd
! compat: implement opener_info somehow
! compat: implement set_capacity_and_notify (and delete windrbd_device_size_change)
! compat: implement struct_size (if possible)
! compat: implement the dax API calls
! compat: implement write same
! compat: implement zero copy
! compat: include jiffies.h needed here?
! compat: make bio_vec compatible
! compat: make this (creating a block device) more Linux compatible
! compat: make this work somehow ... __acquire but probably manual
! compat: move this prototype somewhere else (drbd_open)
! compat: move this somewhere into compat: net/genetlink.h
! compat: move this to drbd_windows.h
! compat: move this to some header ideally net/ipv6.h
! compat: move those to drbd_windows.h
! compat: need to have this
! compat: needed? I think this header should move to linux subdir in the compat layer
! compat: rename atomic_cmpxchg to cmpxchg
! compat: rename vsnprintf (is a Windows function?)
! compat: this probably should be changed in compat layer
! compat: this should be done via module_init / module_exit
! compat: this should be reverted (use mempool for page)
! compat: typecheck: patch this out (no typeof)
! compat: use something else
! compat: wake_up should also wake up all ... so remove
! compat: why is this xchg_ptr in compat?
! header: should already be there ... or compat (need to call a windows function to initialize it)
! remove (maybe compat: fix magic macro)
! review: I think this (asender) thread does not exist in DRBD 9.2 (9.1 also?) any more .. else probably manual maybe compat (implement sched_set_fifo_low)
! review: compat: init synchronization primitives in DriverEntry or manual: leave that here (since transport_classes_lock is static)
