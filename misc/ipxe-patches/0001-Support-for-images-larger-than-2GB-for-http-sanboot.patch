From 672953c0a1378a7171952e9cfc1a7219cf5f6242 Mon Sep 17 00:00:00 2001
From: Johannes Thoma <johannes@johannesthoma.com>
Date: Tue, 8 Jan 2019 16:43:11 +0100
Subject: [PATCH 1/9] Support for images larger than 2GB for http sanboot.

The start member of http_request_range has been widened to
64 bit in order to support sanboot-ing images larger than
2GB over http. The theoretical limit now is slightly less
than 8GB, which is imposed by the limitation of the interrupt
0x13 interface of the BIOS (which is used by the boot loader
to communicate with iPXE).

Tested with an 7,5GB Windows 7 64-bit image: it boots until
it fails to find the root device.

TODO: support %lld in vsnprintf(): right now, hex number support
is hacked into a server side CGI, so this is not yet ready for
submission.
---
 src/include/ipxe/http.h | 2 +-
 src/net/tcp/httpcore.c  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/include/ipxe/http.h b/src/include/ipxe/http.h
index 0893c953..a7458aae 100644
--- a/src/include/ipxe/http.h
+++ b/src/include/ipxe/http.h
@@ -136,7 +136,7 @@ extern struct http_method http_post;
 /** HTTP request range descriptor */
 struct http_request_range {
 	/** Range start */
-	size_t start;
+	uint64_t start;
 	/** Range length, or zero for no range request */
 	size_t len;
 };
diff --git a/src/net/tcp/httpcore.c b/src/net/tcp/httpcore.c
index f755fb72..bc616188 100644
--- a/src/net/tcp/httpcore.c
+++ b/src/net/tcp/httpcore.c
@@ -936,7 +936,7 @@ static int http_format_range ( struct http_transaction *http,
 
 	/* Construct range, if applicable */
 	if ( http->request.range.len ) {
-		return snprintf ( buf, len, "bytes=%zd-%zd",
+		return snprintf ( buf, len, "bytes=0x%llx-0x%llx",
 				  http->request.range.start,
 				  ( http->request.range.start +
 				    http->request.range.len - 1 ) );
-- 
2.17.0

